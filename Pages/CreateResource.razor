@page "/create-resource"
@using Models
@using Services
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using System.Net.Http.Headers
@using Microsoft.Identity.Web

@inject Microsoft.Identity.Web.ITokenAcquisition TokenAcquisitionService
@inject IHttpClientFactory HttpClientFactory
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler




<h3>Create a new resource with our awesome API</h3>
<br />

<EditForm Model="@_request" OnValidSubmit="@HandleValidSubmit" class="form-inline" aria-orientation="horizontal" aria-colspan="3">

    <label class="ml-2">Title:</label>
   <InputText id="Title" @bind-Value="_request.Title" class="form-control" />

    <label class="ml-2">Description:</label>
   <InputText id="Description" @bind-Value="_request.Description" class="form-control" />

    <label class="ml-2">Url:</label>
   <InputText id="Url" @bind-Value="_request.Url" class="form-control" />

   @* <label class="ml-2">UserId:</label>
   <InputText id="UserId" @bind-Value="_request.UserId" class="form-control" /> *@
 
   <label class="ml-2">Initial Rating:</label>
   <InputNumber id="InitialRating" @bind-Value="_request.InitialRating" class="form-control"/>
 
   <button class="btn btn-primary ml-2" type="submit">Submit</button>

</EditForm>


@code {

    private HttpClient _httpClient;

    private ResourceRequestModel _request = new ResourceRequestModel();
    private ResourceResponseModel _response = new ResourceResponseModel();

    [Inject]
    private AuthenticationStateProvider _authProvider { get; set; }

    private async Task HandleValidSubmit()
    {
        var claimer = await _authProvider.GetAuthenticationStateAsync();
        var user = claimer.User;

        if (user.Identity.IsAuthenticated)
        {
            try
            { 
                var userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                _request.UserId = userId.Trim(); 
                System.Console.WriteLine();
                System.Console.WriteLine();
                System.Console.WriteLine(userId);
                System.Console.WriteLine();
                System.Console.WriteLine();
                _httpClient = HttpClientFactory.CreateClient("httpClient");

                System.Console.WriteLine();
                System.Console.WriteLine();
                System.Console.WriteLine(_request.Title);
                System.Console.WriteLine(_request.Description);
                System.Console.WriteLine(_request.Url);
                System.Console.WriteLine(_request.UserId);
                System.Console.WriteLine(_request.InitialRating);
                System.Console.WriteLine();
                System.Console.WriteLine();
                

                var token = await TokenAcquisitionService.GetAccessTokenForUserAsync(new string[] {"api://23d9a97d-3387-499c-83bc-0ae84d198403/ReadAccess"});
                _httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
                _httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

                _response = await _httpClient.PostJsonAsync<ResourceResponseModel>("/api/Resource/Create", _request);
                System.Console.WriteLine(_response);
            }
            catch (Exception ex)
            {
                ConsentHandler.HandleException(ex);
            }
        }

    }

}
